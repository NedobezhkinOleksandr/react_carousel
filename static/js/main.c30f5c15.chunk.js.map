{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","position","goForward","step","_this$props","props","images","frameSize","infinite","newPosition","maxPosition","setState","goBackwards","_this$props2","_createClass","key","value","_this2","_this$props3","this","itemWidth","animationDuration","_jsxs","className","children","_jsx","style","width","transition","map","image","index","transform","src","alt","type","onClick","disabled","Component","App","_this$state","htmlFor","id","min","max","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c30f5c15.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  position: number;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    position: 0,\n  };\n\n  goForward = (step: number): void => {\n    const { position } = this.state;\n    const { images, frameSize, infinite } = this.props;\n\n    const newPosition = position - step;\n    const maxPosition = images.length - frameSize;\n\n    if (position === -maxPosition && infinite) {\n      this.setState({ position: 0 });\n\n      return;\n    }\n\n    if (-newPosition > maxPosition) {\n      this.setState({ position: -maxPosition });\n    } else {\n      this.setState({ position: newPosition });\n    }\n  };\n\n  goBackwards = (step: number): void => {\n    const { position } = this.state;\n    const { images, frameSize, infinite } = this.props;\n\n    const newPosition = position + step;\n    const maxPosition = images.length - frameSize;\n\n    if (position === 0 && infinite) {\n      this.setState({ position: -maxPosition });\n\n      return;\n    }\n\n    if (newPosition > 0) {\n      this.setState({ position: 0 });\n    } else {\n      this.setState({ position: newPosition });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n            transition: `width ${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li\n              key={image}\n              style={{\n                transition: `transform ${animationDuration}ms`,\n                transform: `translateX(${position * itemWidth}px)`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`${index}`}\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            onClick={() => this.goBackwards(step)}\n            disabled={position >= 0 && !infinite}\n          >\n            &#8592;\n          </button>\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            onClick={() => this.goForward(step)}\n            disabled={-position >= images.length - frameSize && !infinite}\n          >\n            &#8594;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport { Component } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div className=\"App__field\">\n          <label htmlFor=\"step\">\n            Step:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"step\"\n            min=\"1\"\n            max={images.length}\n            value={step}\n            onChange={(event) => this.setState({\n              step: +event.target.value,\n            })}\n          />\n\n          <label htmlFor=\"frameSize\">\n            Frame size:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"frameSize\"\n            min=\"1\"\n            max={images.length}\n            value={frameSize}\n            onChange={(event) => this.setState({\n              frameSize: +event.target.value,\n            })}\n          />\n\n          <label htmlFor=\"itemWidth\">\n            Item width:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"itemWidth\"\n            min=\"100\"\n            max=\"200\"\n            value={itemWidth}\n            onChange={(event) => this.setState({\n              itemWidth: +event.target.value,\n            })}\n          />\n\n          <label htmlFor=\"animationDuration\">\n            Animation duration:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"animationDuration\"\n            value={animationDuration}\n            onChange={(event) => this.setState({\n              animationDuration: +event.target.value,\n            })}\n          />\n\n          <label htmlFor=\"infinite\">\n            Infinite:\n          </label>\n\n          <input\n            type=\"checkbox\"\n            id=\"infinite\"\n            checked={infinite}\n            onChange={(event) => this.setState({\n              infinite: event.target.checked,\n            })}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}